name: Trigger Sequential Builds

on:
  workflow_dispatch:
    inputs:
      branch_filter:
        description: "Optional: Specify a branch name or pattern to filter (e.g., 'v2.')"
        required: false
        default: ""

jobs:
  trigger-builds:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Fetch branches
      run: |
        git fetch --all
        git branch -r | grep -o 'v[0-9]*\.[0-9]*' | sort -V > branches.txt

        # Filter branches if branch_filter is provided
        if [[ "${{ github.event.inputs.branch_filter }}" != "" ]]; then
          echo "Applying branch filter: ${{ github.event.inputs.branch_filter }}"
          grep "${{ github.event.inputs.branch_filter }}" branches.txt > filtered_branches.txt
        else
          echo "No branch filter provided. Building all branches."
          cp branches.txt filtered_branches.txt
        fi

        echo "Branches to build:"
        cat filtered_branches.txt

    - name: Trigger branch builds
      run: |
        while read -r branch; do
          echo "Triggering build for branch: $branch"
          gh workflow run build-and-publish.yml -R ${{ github.repository }} --ref "$branch"
          
          echo "Waiting for the new workflow to start for branch: $branch"
          sleep 30  # Increased sleep to 30 seconds
          
          echo "Fetching new workflow run ID for branch: $branch"
          run_id=$(gh run list -R ${{ github.repository }} --branch "$branch" --workflow build-and-publish.yml --json databaseId,status -q '.[0] | select(.status == "in_progress" or .status == "queued").databaseId')

          if [[ -z "$run_id" ]]; then
            echo "No active workflow found for branch $branch. Skipping."
            continue
          fi

          echo "Watching workflow run ID: $run_id"
          gh run watch -R ${{ github.repository }} "$run_id"
        done < filtered_branches.txt
