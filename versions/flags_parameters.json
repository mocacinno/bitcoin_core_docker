{
    "author": "mocacinno",
    "last_modified": "20250923",
    "versions": [
        {
            "version": "v0.1.0",
            "alt_version": "v1.0",
            "github_tag": "",
            "releasedate": "20090109",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
           
        },
        {
            "version": "v0.1.1",
            "alt_version": "v1.1",
            "github_tag": "",
            "releasedate": "20090616",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.1.2",
            "alt_version": "v1.2",
            "github_tag": "",
            "releasedate": "20090801",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.1.3",
            "alt_version": "v1.3",
            "github_tag": "",
            "releasedate": "20090815",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.1.4",
            "alt_version": "v1.4",
            "github_tag": "",
            "releasedate": "20090915",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.1.5",
            "alt_version": "v1.5",
            "github_tag": "",
            "releasedate": "20091211",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.0",
            "alt_version": "v2.0",
            "github_tag": "v2.0",
            "releasedate": "20091216",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.1",
            "alt_version": "v2.1",
            "github_tag": "v2.1",
            "releasedate": "20100630",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.2",
            "alt_version": "v2.2",
            "github_tag": "v2.2",
            "releasedate": "20100701",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.3",
            "alt_version": "v2.3",
            "github_tag": "v2.3",
            "releasedate": "20100812",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.4",
            "alt_version": "v2.4",
            "github_tag": "v2.4",
            "releasedate": "20100815",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.5",
            "alt_version": "v2.5",
            "github_tag": "v2.5",
            "releasedate": "20100918",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.6",
            "alt_version": "v2.6",
            "github_tag": "v2.6",
            "releasedate": "20101007",
            "cli": [],
            "daemon": [],
            "getinfo": [],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.7",
            "alt_version": "v2.7",
            "github_tag": "v2.7",
            "releasedate": "20101110",
            "cli": [
                {
                    "flag": "stop",
                    "help": "stop (no parameters)\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount (no parameters)\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber (no parameters)\neturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount (no parameters)\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty (no parameters)\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "getbalance (no parameters)\nReturns the server's available balance.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate (no parameters)\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "setgenerate",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo (no parameters)",
                    "section": ""
                },
                {
                    "flag": "getnewaddress",
                    "help": "getnewaddress [label]\nReturns a new bitcoin address for receiving payments.  If [label] is specified (recommended), it is added to the address book so payments received with the address will be labeled.",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "listtransactions",
                    "help": "listtransactions [count=10] [includegenerated=false]\nReturns up to [count] most recent transactions.",
                    "section": ""
                },
                {
                    "flag": "getamountreceived",
                    "help": "getamountreceived <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getallreceived",
                    "help": "getallreceived [minconf=1]\n[minconf] is the minimum number of confirmations before payments are included.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included\n  \"label\" : the label of the receiving address",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": ""
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": ""
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": ""
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": ""
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": ""
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": ""
                },
                {
                    "flag": "connect",
                    "help": "Connect only to the specified node",
                    "section": ""
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": ""
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.8",
            "alt_version": "v2.8",
            "github_tag": "v2.8",
            "releasedate": "20101113",
            "cli": [
                {
                    "flag": "stop",
                    "help": "stop (no parameters)\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount (no parameters)\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber (no parameters)\neturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount (no parameters)\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty (no parameters)\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "getbalance (no parameters)\nReturns the server's available balance.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate (no parameters)\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "setgenerate",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo (no parameters)",
                    "section": ""
                },
                {
                    "flag": "getnewaddress",
                    "help": "getnewaddress [label]\nReturns a new bitcoin address for receiving payments.  If [label] is specified (recommended), it is added to the address book so payments received with the address will be labeled.",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "listtransactions",
                    "help": "listtransactions [count=10] [includegenerated=false]\nReturns up to [count] most recent transactions.",
                    "section": ""
                },
                {
                    "flag": "getamountreceived",
                    "help": "getamountreceived <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getallreceived",
                    "help": "getallreceived [minconf=1]\n[minconf] is the minimum number of confirmations before payments are included.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included\n  \"label\" : the label of the receiving address",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": ""
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": ""
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": ""
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": ""
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": ""
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": ""
                },
                {
                    "flag": "connect",
                    "help": "Connect only to the specified node",
                    "section": ""
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": ""
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.9",
            "alt_version": "v2.9",
            "github_tag": "v2.9",
            "releasedate": "20101116",
            "cli": [
                {
                    "flag": "stop",
                    "help": "stop (no parameters)\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount (no parameters)\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber (no parameters)\neturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount (no parameters)\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty (no parameters)\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "getbalance (no parameters)\nReturns the server's available balance.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate (no parameters)\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "setgenerate",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo (no parameters)",
                    "section": ""
                },
                {
                    "flag": "getnewaddress",
                    "help": "getnewaddress [label]\nReturns a new bitcoin address for receiving payments.  If [label] is specified (recommended), it is added to the address book so payments received with the address will be labeled.",
                    "section": ""
                },
                {
                    "flag": "setlabel",
                    "help": "setlabel <bitcoinaddress> <label>\nSets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getlabel",
                    "help": "getlabel <bitcoinaddress>\nReturns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbylabel",
                    "help": "getaddressesbylabel <label>\nReturns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "listtransactions",
                    "help": "listtransactions [count=10] [includegenerated=false]\nReturns up to [count] most recent transactions.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel",
                    "help": "getreceivedbylabel <label> [minconf=1]\nReturns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"label\" : the label of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel",
                    "help": "listreceivedbylabel [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include labels that haven't received any payments.\nReturns an array of objects containing:\n  \"label\" : the label of the receiving addresses\n  \"amount\" : total amount received by addresses with this label\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "getallreceived",
                    "help": "getallreceived [minconf=1]\n[minconf] is the minimum number of confirmations before payments are included.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included\n  \"label\" : the label of the receiving address",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": ""
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": ""
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": ""
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": ""
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": ""
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": ""
                },
                {
                    "flag": "connect",
                    "help": "Connect only to the specified node",
                    "section": ""
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": ""
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.10",
            "alt_version": "v2.10",
            "github_tag": "v2.10",
            "releasedate": "20101123",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listtransactions [count=10] [includegenerated=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.11",
            "alt_version": "v2.11",
            "github_tag": "v2.11",
            "releasedate": "20101127",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listtransactions [count=10] [includegenerated=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.12",
            "alt_version": "v2.12",
            "github_tag": "v2.12",
            "releasedate": "20101130",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listtransactions [count=10] [includegenerated=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.2.13",
            "alt_version": "v2.13",
            "github_tag": "v2.13",
            "releasedate": "20101203",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listtransactions [count=10] [includegenerated=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.0",
            "alt_version": "v3.0",
            "github_tag": "v3.0",
            "releasedate": "20091005",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listtransactions [count=10] [includegenerated=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.1",
            "alt_version": "v3.1",
            "github_tag": "v3.1",
            "releasedate": "20091212",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listtransactions [count=10] [includegenerated=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.2",
            "alt_version": "v3.2",
            "github_tag": "v3.2",
            "releasedate": "20091216",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listtransactions [count=10] [includegenerated=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.3",
            "alt_version": "v3.3",
            "github_tag": "v3.3",
            "releasedate": "20100625",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.4",
            "alt_version": "v3.4",
            "github_tag": "v3.4",
            "releasedate": "20100626",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.5",
            "alt_version": "v3.5",
            "github_tag": "v3.5",
            "releasedate": "20100701",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.6",
            "alt_version": "v3.6",
            "github_tag": "v3.6",
            "releasedate": "20100705",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.7",
            "alt_version": "v3.7",
            "github_tag": "v3.7",
            "releasedate": "20100706",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.8",
            "alt_version": "v3.8",
            "github_tag": "v3.8",
            "releasedate": "20100710",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.9",
            "alt_version": "v3.9",
            "github_tag": "v3.9",
            "releasedate": "20100716",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.10",
            "alt_version": "v3.10",
            "github_tag": "v3.10",
            "releasedate": "20100727",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.11",
            "alt_version": "v3.11",
            "github_tag": "v3.11",
            "releasedate": "20100806",
            "cli": [
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.12",
            "alt_version": "v3.12",
            "github_tag": "v3.12",
            "releasedate": "20100812",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.13",
            "alt_version": "v3.13",
            "github_tag": "v3.13",
            "releasedate": "20100815",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                }
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.14",
            "alt_version": "v3.14",
            "github_tag": "v3.14",
            "releasedate": "20100817",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.15",
            "alt_version": "v3.15",
            "github_tag": "v3.15",
            "releasedate": "20100819",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.16",
            "alt_version": "v3.16",
            "github_tag": "v3.16",
            "releasedate": "20100918",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbylabel <label>",
                    "help": "Returns the list of addresses with the given label.",
                    "section": ""
                },
                {
                    "flag": "getbalance",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "getlabel <bitcoinaddress>",
                    "help": "Returns the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [label]",
                    "help": "",
                    "section": ""
                },                
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbylabel <label> [minconf=1]",
                    "help": "Returns the total amount received by addresses with <label> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "help",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "listreceivedbylabel [minconf=1] [includeempty=false]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "<amount> is a real and is rounded to the nearest 0.0",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "setlabel <bitcoinaddress> <label>",
                    "help": "Sets the label associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.17",
            "alt_version": "v3.17",
            "github_tag": "v3.17",
            "releasedate": "20101007",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.18",
            "alt_version": "v3.18",
            "github_tag": "v3.18",
            "releasedate": "20101209",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.19",
            "alt_version": "v3.19",
            "github_tag": "v3.19",
            "releasedate": "20101213",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                },
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.20",
            "alt_version": "v3.20",
            "github_tag": "v3.20",
            "releasedate": "20110104",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "listaccounts [minconf=1]",
                    "help": "listaccounts [minconf=1]\nReturns Object that has account names as keys, account balances as values.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "nolisten",
                    "help": "Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                }, 
                {
                    "flag": "server",
                    "help": "Accept command line and JSON-RPC commands",
                    "section": "Options"
                },
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "keypool=<n>",
                    "help": "Set key pool size to <n> (default: 100)",
                    "section": "Options"
                },
                {
                    "flag": "rescan",
                    "help": "Rescan the block chain for missing wallet transactions",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.21",
            "alt_version": "v3.21",
            "github_tag": "v3.21",
            "releasedate": "20110101",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "listaccounts [minconf=1]",
                    "help": "listaccounts [minconf=1]\nReturns Object that has account names as keys, account balances as values.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]",
                    "help": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\namounts are double-precision floating point numbers",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "pid=<file>",
                    "help": "Specify pid file (default: bitcoind.pid)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "nolisten",
                    "help": "Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                }, 
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "keypool=<n>",
                    "help": "Set key pool size to <n> (default: 100)",
                    "section": "Options"
                },
                {
                    "flag": "rescan",
                    "help": "Rescan the block chain for missing wallet transactions",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.22",
            "alt_version": "v3.22",
            "github_tag": "v3.22",
            "releasedate": "20110210",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "listaccounts [minconf=1]",
                    "help": "listaccounts [minconf=1]\nReturns Object that has account names as keys, account balances as values.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]",
                    "help": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\namounts are double-precision floating point numbers",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "settxfee <amount>",
                    "help": "settxfee <amount>\n<amount> is a real and is rounded to the nearest 0.00000001",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "pid=<file>",
                    "help": "Specify pid file (default: bitcoind.pid)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "dns",
                    "help": "Allow DNS lookups for addnode and connect",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "nolisten",
                    "help": "Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                }, 
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "keypool=<n>",
                    "help": "Set key pool size to <n> (default: 100)",
                    "section": "Options"
                },
                {
                    "flag": "rescan",
                    "help": "Rescan the block chain for missing wallet transactions",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.23",
            "alt_version": "v3.23",
            "github_tag": "v3.23",
            "releasedate": "20110407",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "listaccounts [minconf=1]",
                    "help": "listaccounts [minconf=1]\nReturns Object that has account names as keys, account balances as values.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]",
                    "help": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\namounts are double-precision floating point numbers",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "settxfee <amount>",
                    "help": "settxfee <amount>\n<amount> is a real and is rounded to the nearest 0.00000001",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "pid=<file>",
                    "help": "Specify pid file (default: bitcoind.pid)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "timeout=<n>",
                    "help": "Specify connection timeout (in milliseconds)",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "dns",
                    "help": "Allow DNS lookups for addnode and connect",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "nolisten",
                    "help": "Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                }, 
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "keypool=<n>",
                    "help": "Set key pool size to <n> (default: 100)",
                    "section": "Options"
                },
                {
                    "flag": "rescan",
                    "help": "Rescan the block chain for missing wallet transactions",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.3.24",
            "alt_version": "v3.24",
            "github_tag": "v3.24",
            "releasedate": "20110621",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""                    
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""         
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""         
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""         
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""         
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""         
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""         
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""         
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""         
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""         
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""         
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""         
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""         
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""         
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""         
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""         
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""         
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""         
                },
                {
                    "flag": "listaccounts [minconf=1]",
                    "help": "listaccounts [minconf=1]\nReturns Object that has account names as keys, account balances as values.",
                    "section": ""         
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""         
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""         
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""         
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""         
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""         
                },
                {
                    "flag": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]",
                    "help": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\namounts are double-precision floating point numbers",
                    "section": ""         
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""         
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""         
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""         
                },
                {
                    "flag": "settxfee <amount>",
                    "help": "settxfee <amount>\n<amount> is a real and is rounded to the nearest 0.00000001",
                    "section": ""         
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""         
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""         
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"         
                },
                {
                    "flag": "pid=<file>",
                    "help": "Specify pid file (default: bitcoind.pid)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "timeout=<n>",
                    "help": "Specify connection timeout (in milliseconds)",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "dns",
                    "help": "Allow DNS lookups for addnode and connect",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "nolisten",
                    "help": "Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                }, 
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "keypool=<n>",
                    "help": "Set key pool size to <n> (default: 100)",
                    "section": "Options"
                },
                {
                    "flag": "rescan",
                    "help": "Rescan the block chain for missing wallet transactions",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.4.0",
            "alt_version": "v4.0",
            "github_tag": "v4.0",
            "releasedate": "20110621",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "encryptwallet <passphrase>",
                    "help": "encryptwallet <passphrase>\nEncrypts the wallet with <passphrase>.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "keypoolrefill",
                    "help": "keypoolrefill\nFills the keypool.",
                    "section": ""
                },
                {
                    "flag": "listaccounts [minconf=1]",
                    "help": "listaccounts [minconf=1]\nReturns Object that has account names as keys, account balances as values.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]",
                    "help": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\namounts are double-precision floating point numbers",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "settxfee <amount>",
                    "help": "settxfee <amount>\n<amount> is a real and is rounded to the nearest 0.00000001",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                }

            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "pid=<file>",
                    "help": "Specify pid file (default: bitcoind.pid)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "timeout=<n>",
                    "help": "Specify connection timeout (in milliseconds)",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "dns",
                    "help": "Allow DNS lookups for addnode and connect",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "nolisten",
                    "help": "Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                }, 
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "keypool=<n>",
                    "help": "Set key pool size to <n> (default: 100)",
                    "section": "Options"
                },
                {
                    "flag": "rescan",
                    "help": "Rescan the block chain for missing wallet transactions",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": "Options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "keypoolsize",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        },
        {
            "version": "v0.5.0",
            "alt_version": "v5.0",
            "github_tag": "v5.0",
            "releasedate": "20111123",
            "cli": [
                {
                    "flag": "backupwallet <destination>",
                    "help": "backupwallet <destination>\nSafely copies wallet.dat to destination, which can be a directory or a path with filename.",
                    "section": ""
                },
                {
                    "flag": "encryptwallet <passphrase>",
                    "help": "encryptwallet <passphrase>\nEncrypts the wallet with <passphrase>.",
                    "section": ""
                },
                {
                    "flag": "getaccount <bitcoinaddress>",
                    "help": "getaccount <bitcoinaddress>\nReturns the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "getaccountaddress <account>",
                    "help": "getaccountaddress <account>\nReturns the current bitcoin address for receiving payments to this account.",
                    "section": ""
                },
                {
                    "flag": "getaddressesbyaccount <account>",
                    "help": "getaddressesbyaccount <account>\nReturns the list of addresses for the given account.",
                    "section": ""
                },

                {
                    "flag": "getbalance [account] [minconf=1]",
                    "help": "getbalance [account] [minconf=1]\nIf [account] is not specified, returns the server's total available balance.\nIf [account] is specified, returns the balance in the account.",
                    "section": ""
                },
                {
                    "flag": "getblockcount",
                    "help": "getblockcount\nReturns the number of blocks in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getblocknumber",
                    "help": "getblocknumber\nReturns the block number of the latest block in the longest block chain.",
                    "section": ""
                },
                {
                    "flag": "getconnectioncount",
                    "help": "getconnectioncount\nReturns the number of connections to other nodes.",
                    "section": ""
                },
                {
                    "flag": "getdifficulty",
                    "help": "getdifficulty\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.",
                    "section": ""
                },
                {
                    "flag": "getgenerate",
                    "help": "getgenerate\nReturns true or false.",
                    "section": ""
                },
                {
                    "flag": "gethashespersec",
                    "help":"gethashespersec\nReturns a recent hashes per second performance measurement while generating.",
                    "section": ""
                },
                {
                    "flag": "getinfo",
                    "help": "getinfo\nReturns an object containing various state info.",
                    "section": ""
                },
                {
                    "flag": "getmemorypool [data]",
                    "help": "getmemorypool [data]\nIf [data] is not specified, returns data needed to construct a block to work on:\n  \"version\" : block version\n  \"previousblockhash\" : hash of current highest block\n  \"transactions\" : contents of non-coinbase transactions that should be included in the next block\n  \"coinbasevalue\" : maximum allowable input to coinbase transaction, including the generation award and transaction fees\n  \"time\" : timestamp appropriate for next block\n  \"bits\" : compressed target of next block\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                },
                {
                    "flag": "getnewaddress [account]",
                    "help": "getnewaddress [account]\nReturns a new bitcoin address for receiving payments.  If [account] is specified (recommended), it is added to the address book so payments received with the address will be credited to [account].",
                    "section": ""
                },  
                {
                    "flag": "getreceivedbyaccount <account> [minconf=1]",
                    "help": "getreceivedbyaccount <account> [minconf=1]\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "getreceivedbyaddress <bitcoinaddress> [minconf=1]",
                    "help": "getreceivedbyaddress <bitcoinaddress> [minconf=1]\nReturns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.",
                    "section": ""
                },
                {
                    "flag": "gettransaction <txid>",
                    "help": "gettransaction <txid>\nGet detailed information about <txid>",
                    "section": ""
                },
                {
                    "flag": "getwork [data]",
                    "help": "getwork [data]\nIf [data] is not specified, returns formatted hash data to work on:\n  \"midstate\" : precomputed hash state after hashing the first half of the data\n  \"data\" : block data\n  \"hash1\" : formatted hash buffer for second hash  \"target\" : little endian hash target\nIf [data] is specified, tries to solve the block and returns true if it was successful.",
                    "section": ""
                }, 
                {
                    "flag": "help [command]",
                    "help": "help [command]\nList commands, or get help for a command.",
                    "section": ""
                },
                {
                    "flag": "keypoolrefill",
                    "help": "keypoolrefill\nFills the keypool.",
                    "section": ""
                },
                {
                    "flag": "listaccounts [minconf=1]",
                    "help": "listaccounts [minconf=1]\nReturns Object that has account names as keys, account balances as values.",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaccount [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaccount [minconf=1] [includeempty=false]/n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include accounts that haven't received any payments.\nReturns an array of objects containing:\n  \"account\" : the account of the receiving addresses\n  \"amount\" : total amount received by addresses with this account\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listreceivedbyaddress [minconf=1] [includeempty=false]",
                    "help": "listreceivedbyaddress [minconf=1] [includeempty=false]\n[minconf] is the minimum number of confirmations before payments are included.\n[includeempty] whether to include addresses that haven't received any payments.\nReturns an array of objects containing:\n  \"address\" : receiving address\n  \"account\" : the account of the receiving address\n  \"amount\" : total amount received by the address\n  \"confirmations\" : number of confirmations of the most recent transaction included",
                    "section": ""
                },
                {
                    "flag": "listsinceblock [blockid] [target-confirmations]",
                    "help": "listsinceblock [blockid] [target-confirmations]\nGet all transactions in blocks since block [blockid], or all transactions if omittedl",
                    "section": ""
                },
                {
                    "flag": "listtransactions <account> [count=10]",
                    "help": "listtransactions <account> [count=10]\nReturns up to [count] most recent transactions for account <account>.",
                    "section": ""
                },
                {
                    "flag": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]",
                    "help": "move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\nMove from one account in your wallet to another.",
                    "section": ""
                },
                {
                    "flag": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]",
                    "help": "sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]",
                    "help": "sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\namounts are double-precision floating point numbers",
                    "section": ""
                },
                {
                    "flag": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]",
                    "help": "sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\n<amount> is a real and is rounded to the nearest 0.01",
                    "section": ""
                },
                {
                    "flag": "setaccount <bitcoinaddress> <account>",
                    "help": "setaccount <bitcoinaddress> <account>\nSets the account associated with the given address.",
                    "section": ""
                },
                {
                    "flag": "setgenerate <generate> [genproclimit]",
                    "help": "setgenerate <generate> [genproclimit]\n<generate> is true or false to turn generation on or off.\nGeneration is limited to [genproclimit] processors, -1 is unlimited.",
                    "section": ""
                },
                {
                    "flag": "settxfee <amount>",
                    "help": "settxfee <amount>\n<amount> is a real and is rounded to the nearest 0.00000001",
                    "section": ""
                },
                {
                    "flag": "signmessage <bitcoinaddress> <message>",
                    "help": "signmessage <bitcoinaddress> <message>\nSign a message with the private key of an address",
                    "section": ""
                },
                {
                    "flag": "stop",
                    "help": "stop\nStop bitcoin server.",
                    "section": ""
                },
                {
                    "flag": "validateaddress <bitcoinaddress>",
                    "help": "validateaddress <bitcoinaddress>\nReturn information about <bitcoinaddress>.",
                    "section": ""
                },
                {
                    "flag": "verifymessage <bitcoinaddress> <signature> <message>",
                    "help": "verifymessage <bitcoinaddress> <signature> <message>\nVerify a signed message",
                    "section": ""
                }
                
            ],
            "daemon": [
                {
                    "flag": "conf=<file>",
                    "help": "Specify configuration file (default: bitcoin.conf)",
                    "section": "Options"
                },
                {
                    "flag": "pid=<file>",
                    "help": "Specify pid file (default: bitcoind.pid)",
                    "section": "Options"
                },
                {
                    "flag": "gen",
                    "help": "Generate coins",
                    "section": "Options"
                },
                {
                    "flag": "gen=0",
                    "help": "Don't generate coins",
                    "section": "Options"
                },
                {
                    "flag": "min",
                    "help": "Start minimized",
                    "section": "Options"
                },
                {
                    "flag": "datadir=<dir>",
                    "help": "Specify data directory",
                    "section": "Options"
                },
                {
                    "flag": "timeout=<n>",
                    "help": "Specify connection timeout (in milliseconds)",
                    "section": "Options"
                },
                {
                    "flag": "proxy=<ip:port>",
                    "help": "Connect through socks4 proxy",
                    "section": "Options"
                },
                {
                    "flag": "dns",
                    "help": "Allow DNS lookups for addnode and connect",
                    "section": "Options"
                },
                {
                    "flag": "addnode=<ip>",
                    "help": "Add a node to connect to",
                    "section": "Options"
                },
                {
                    "flag": "connect=<ip>",
                    "help": "Connect only to the specified node",
                    "section": "Options"
                },
                {
                    "flag": "nolisten",
                    "help": "Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "banscore=<n>",
                    "help": "Threshold for disconnecting misbehaving peers (default: 100)Don't accept connections from outside",
                    "section": "Options"
                }, 
                {
                    "flag": "bantime=<n>",
                    "help": "Number of seconds to keep misbehaving peers from reconnecting (default: 86400)",
                    "section": "Options"
                },
                {
                    "flag": "upnp",
                    "help": "Attempt to use UPnP to map the listening port",
                    "section": "Options"
                }, 
                {
                    "flag": "paytxfee=<amt>",
                    "help": "Fee per KB to add to transactions you send",
                    "section": "Options"
                }, 
                {
                    "flag": "daemon",
                    "help": "Run in the background as a daemon and accept commands",
                    "section": "Options"
                },
                {
                    "flag": "testnet",
                    "help": "Use the test network",
                    "section": "Options"
                },
                {
                    "flag": "rpcuser=<user>",
                    "help": "Username for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcpassword=<pw>",
                    "help": "Password for JSON-RPC connections",
                    "section": "Options"
                },
                {
                    "flag": "rpcport=<port>",
                    "help": "Listen for JSON-RPC connections on <port>",
                    "section": "Options"
                },
                {
                    "flag": "rpcallowip=<ip>",
                    "help": "Allow JSON-RPC connections from specified IP address",
                    "section": "Options"
                },
                {
                    "flag": "rpcconnect=<ip>",
                    "help": "Send commands to node running on <ip>",
                    "section": "Options"
                },
                {
                    "flag": "keypool=<n>",
                    "help": "Set key pool size to <n> (default: 100)",
                    "section": "Options"
                },
                {
                    "flag": "rescan",
                    "help": "Rescan the block chain for missing wallet transactions",
                    "section": "Options"
                },
                {
                    "flag": "?",
                    "help": "This help message",
                    "section": ""
                },
                {
                    "flag": "rpcssl",
                    "help": "Use OpenSSL (https) for JSON-RPC connections",
                    "section": "SSL options"
                },
                {
                    "flag": "rpcsslcertificatechainfile=<file.cert>",
                    "help": "Server certificate file (default: server.cert)",
                    "section": "SSL options"
                },
                {
                    "flag": "rpcsslprivatekeyfile=<file.pem>",
                    "help": "Server private key (default: server.pem)",
                    "section": "SSL options"
                },
                {
                    "flag": "rpcsslciphers=<ciphers>",
                    "help": "Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)",
                    "section": "SSL options"
                }
            ],
            "getinfo": [
                "version",
                "balance",
                "blocks",
                "connections",
                "proxy",
                "generate",
                "genproclimit",
                "difficulty",
                "hashespersec",
                "testnet",
                "keypoololdest",
                "keypoolsize",
                "paytxfee",
                "errors"
            ],
            "getblockchaininfo": [],
            "getwalletinfo": [],
            "getnetworkinfo": []
        }
    ]
}